{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "This is the API documentation for the Laravel application.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user and returns the data",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "phone",
                                        "example": "+380667147444"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return a JWT token",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "User logout.",
                "operationId": "1fed6188e46ccd76d9d1e177f9b8037a",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get list of Languages",
                "operationId": "1cb1ddff581b67412e8c4d53e8a5286d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "en"
                                            },
                                            "short_name": {
                                                "type": "string",
                                                "example": "Eng"
                                            },
                                            "full_name": {
                                                "type": "string",
                                                "example": "English"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Languages"
                ],
                "summary": "Store a new Language",
                "description": "Creates a new Language and stores it in the database.",
                "operationId": "storeLanguage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "short_name",
                                    "full_name"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Code of Language",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "short_name": {
                                        "description": "Short name of Language",
                                        "type": "string",
                                        "example": "Eng"
                                    },
                                    "full_name": {
                                        "description": "Full name of Language",
                                        "type": "string",
                                        "example": "English"
                                    },
                                    "is_enabled": {
                                        "description": "Is enabled Language",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "order": {
                                        "description": "Order of Language",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Languages created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "description": "Code of created Language",
                                            "type": "string",
                                            "example": "en"
                                        },
                                        "short_name": {
                                            "description": "Short name of created Language",
                                            "type": "string",
                                            "example": "Eng"
                                        },
                                        "full_name": {
                                            "description": "Full name of created Language",
                                            "type": "string",
                                            "example": "English"
                                        },
                                        "is_enabled": {
                                            "description": "Is enabled Language",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order": {
                                            "description": "Order of Language",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/languages/{code}": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Retrieve a specific resource by Code",
                "operationId": "b81e018383db76335e35c4141ba7ddd9",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Сode of the Language to show",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "description": "Code of updated Language",
                                            "type": "string",
                                            "example": "en"
                                        },
                                        "short_name": {
                                            "description": "Short name of updated Language",
                                            "type": "string",
                                            "example": "Eng"
                                        },
                                        "full_name": {
                                            "description": "Full name of updated Language",
                                            "type": "string",
                                            "example": "English"
                                        },
                                        "is_enabled": {
                                            "description": "Is enabled Language",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order": {
                                            "description": "Order of Language",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Language not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Languages"
                ],
                "summary": "Update an existing Language",
                "description": "Updates the details of an existing Language by its Сode.",
                "operationId": "updateLanguage",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Сode of the Language to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Code of Language",
                                        "type": "string",
                                        "example": "en"
                                    },
                                    "short_name": {
                                        "description": "Short name of Language",
                                        "type": "string",
                                        "example": "Eng"
                                    },
                                    "full_name": {
                                        "description": "Full name of Language",
                                        "type": "string",
                                        "example": "English"
                                    },
                                    "is_enabled": {
                                        "description": "Is enabled Language",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "order": {
                                        "description": "Order of Language",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Languages updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "description": "Code of updated Language",
                                            "type": "string",
                                            "example": "en"
                                        },
                                        "short_name": {
                                            "description": "Short name of updated Language",
                                            "type": "string",
                                            "example": "Eng"
                                        },
                                        "full_name": {
                                            "description": "Full name of updated Language",
                                            "type": "string",
                                            "example": "English"
                                        },
                                        "is_enabled": {
                                            "description": "Is enabled Language",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "order": {
                                            "description": "Order of Language",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/current-language": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get the current language",
                "operationId": "6998f6afb64809bd9fc2758e0546829c",
                "responses": {
                    "200": {
                        "description": "Current language",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "language": {
                                            "type": "string",
                                            "example": "en"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/pet-breeds": {
            "get": {
                "tags": [
                    "PetBreeds"
                ],
                "summary": "Get list of Pet Breeds",
                "operationId": "718fea5037700adc791569d16e8476e3",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "pet_type_id",
                        "in": "query",
                        "description": "ID of the Pet Breed to filter breeds",
                        "required": true,
                        "schema": {
                            "description": "Must be a valid ID from the pet_types table",
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Китайская хохлатая собака"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-12T20:08:04.566Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "PetBreeds"
                ],
                "summary": "Store a new Pet Breed",
                "description": "Creates a new Pet Breed and stores it in the database.",
                "operationId": "storePetBreeds",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pet_type_id",
                                    "name_uk",
                                    "name_en",
                                    "name_ru"
                                ],
                                "properties": {
                                    "pet_type_id": {
                                        "description": "ID of the Pet Breed",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "name_uk": {
                                        "description": "Name of the created Pet Breed in Ukrainian",
                                        "type": "string",
                                        "example": "Китайський чубатий собака"
                                    },
                                    "name_en": {
                                        "description": "Name of the created Pet Breed in English",
                                        "type": "string",
                                        "example": "Chinese Crested Dog"
                                    },
                                    "name_ru": {
                                        "description": "Name of the created Pet Breed in Russian",
                                        "type": "string",
                                        "example": "Китайская хохлатая собака"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pet Breed created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the created Pet Breed",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "pet_type_id": {
                                            "description": "ID of the Pet Breed",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name_uk": {
                                            "description": "Name of the created Pet Breed in Ukrainian",
                                            "type": "string",
                                            "example": "Китайський чубатий собака"
                                        },
                                        "name_en": {
                                            "description": "Name of the created Pet Breed in English",
                                            "type": "string",
                                            "example": "Chinese Crested Dog"
                                        },
                                        "name_ru": {
                                            "description": "Name of the created Pet Breed in Russian",
                                            "type": "string",
                                            "example": "Китайская хохлатая собака"
                                        },
                                        "updated_at": {
                                            "description": "Date and time of the last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        },
                                        "created_at": {
                                            "description": "Date and time of the creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/pet-breeds/{id}": {
            "get": {
                "tags": [
                    "PetBreeds"
                ],
                "summary": "Retrieve a specific resource by ID",
                "operationId": "a32a5a21420a87f6d6816cc8c456e862",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Pet Breed to show",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the requested Pet Breed",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "pet_type_id": {
                                            "description": "ID of the Pet Breed",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name_uk": {
                                            "description": "Name of the requested Pet Breed in Ukrainian",
                                            "type": "string",
                                            "example": "Китайський чубатий собака"
                                        },
                                        "name_en": {
                                            "description": "Name of the requested Pet Breed in English",
                                            "type": "string",
                                            "example": "Chinese Crested Dog"
                                        },
                                        "name_ru": {
                                            "description": "Name of the requested Pet Breed in Russian",
                                            "type": "string",
                                            "example": "Китайская хохлатая собака"
                                        },
                                        "updated_at": {
                                            "description": "Date and time of the last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        },
                                        "created_at": {
                                            "description": "Date and time of the creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet Breed not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PetBreeds"
                ],
                "summary": "Update an existing Pet Breed",
                "description": "Updates the details of an existing Pet Breed by its ID.",
                "operationId": "updatePetBreed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Pet Breed to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pet_type_id": {
                                        "description": "ID of the Pet Breed",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "1"
                                    },
                                    "name_uk": {
                                        "description": "Name of the updated Pet Breed in Ukrainian",
                                        "type": "string",
                                        "example": "Китайський чубатий собака"
                                    },
                                    "name_en": {
                                        "description": "Name of the updated Pet Breed in English",
                                        "type": "string",
                                        "example": "Chinese Crested Dog"
                                    },
                                    "name_ru": {
                                        "description": "Name of the updated Pet Breed in Russian",
                                        "type": "string",
                                        "example": "Китайская хохлатая собака"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pet Breed updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the updated Pet Breed",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "pet_type_id": {
                                            "description": "ID of the Pet Breed",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name_uk": {
                                            "description": "Name of the updated Pet Breed in Ukrainian",
                                            "type": "string",
                                            "example": "Китайський чубатий собака"
                                        },
                                        "name_en": {
                                            "description": "Name of the updated Pet Breed in English",
                                            "type": "string",
                                            "example": "Chinese Crested Dog"
                                        },
                                        "name_ru": {
                                            "description": "Name of the updated Pet Breed in Russian",
                                            "type": "string",
                                            "example": "Китайская хохлатая собака"
                                        },
                                        "updated_at": {
                                            "description": "Date and time of the last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        },
                                        "created_at": {
                                            "description": "Date and time of the creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PetBreeds"
                ],
                "summary": "Delete a Pet Breed",
                "description": "Deletes a PetBreed by its ID",
                "operationId": "destroyPetBreed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Pet Breed to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet Breed deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pet Breed deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resource": {
            "get": {
                "tags": [
                    "PetOwner"
                ],
                "summary": "Retrieve a list of Pet Owners",
                "description": "Returns a list of Pet Owners from the database",
                "operationId": "getPetOwners",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "PetOwners",
                                    "description": "Владельцы животных",
                                    "properties": {
                                        "id": {
                                            "description": "ID of the Pet",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "user_id": {
                                            "description": "ID of owner",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "owner": {
                                            "description": "Name of owner",
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "pet_type_id": {
                                            "description": "ID of the Pet Type",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "type": {
                                            "description": "Type of the Pet in Currrent language",
                                            "type": "string",
                                            "example": "Dog"
                                        },
                                        "pet_breed_id": {
                                            "description": "ID of the Pet Breed",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "breed": {
                                            "description": "Breed of the Pet in Currrent language",
                                            "type": "string",
                                            "example": "German Shepherd"
                                        },
                                        "nickname": {
                                            "description": "Nickname of the Pet in Currrent language",
                                            "type": "string",
                                            "example": "Lord"
                                        },
                                        "year_of_birth": {
                                            "description": "Year of birth",
                                            "type": "integer",
                                            "example": "2020"
                                        },
                                        "age": {
                                            "description": "Age of pet",
                                            "type": "integer",
                                            "example": "5"
                                        },
                                        "updated_at": {
                                            "description": "Date and time of the last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        },
                                        "created_at": {
                                            "description": "Date and time of the creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/pet-types": {
            "get": {
                "tags": [
                    "PetTypes"
                ],
                "summary": "Get list of Pet Types",
                "operationId": "f7c75ad6326bb9c3251720f9243e618b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "собака"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-12T20:08:04.566Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "PetTypes"
                ],
                "summary": "Store a new Pet Type",
                "description": "Creates a new Pet Type and stores it in the database.",
                "operationId": "storePetTypes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name_uk",
                                    "name_en",
                                    "name_ru"
                                ],
                                "properties": {
                                    "name_uk": {
                                        "description": "Name of the created Pet Type in Ukrainian",
                                        "type": "string",
                                        "example": "собака"
                                    },
                                    "name_en": {
                                        "description": "Name of the created Pet Type in English",
                                        "type": "string",
                                        "example": "dog"
                                    },
                                    "name_ru": {
                                        "description": "Name of the created Pet Type in Russian",
                                        "type": "string",
                                        "example": "собака"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pet Type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the created Pet Type",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name_uk": {
                                            "description": "Name of the created Pet Type in Ukrainian",
                                            "type": "string",
                                            "example": "собака"
                                        },
                                        "name_en": {
                                            "description": "Name of the created Pet Type in English",
                                            "type": "string",
                                            "example": "dog"
                                        },
                                        "name_ru": {
                                            "description": "Name of the created Pet Type in Russian",
                                            "type": "string",
                                            "example": "собака"
                                        },
                                        "updated_at": {
                                            "description": "Date and time of the last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        },
                                        "created_at": {
                                            "description": "Date and time of the creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/pet-types/{id}": {
            "get": {
                "tags": [
                    "PetTypes"
                ],
                "summary": "Retrieve a specific resource by ID",
                "operationId": "ef62c7993df1e5da8dbcd076dcf10cc0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Pet Type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of the resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the requested Pet Type",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name_uk": {
                                            "description": "Name of the requested Pet Type in Ukrainian",
                                            "type": "string",
                                            "example": "собака"
                                        },
                                        "name_en": {
                                            "description": "Name of the requested Pet Type in English",
                                            "type": "string",
                                            "example": "dog"
                                        },
                                        "name_ru": {
                                            "description": "Name of the requested Pet Type in Russian",
                                            "type": "string",
                                            "example": "собака"
                                        },
                                        "updated_at": {
                                            "description": "Date and time of the last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        },
                                        "created_at": {
                                            "description": "Date and time of the creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "PetTypes"
                ],
                "summary": "Update an existing Pet Type",
                "description": "Updates the details of an existing Pet Type by its ID.",
                "operationId": "updatePetType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Pet Type to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name_uk": {
                                        "description": "Name of the updated Pet Type in Ukrainian",
                                        "type": "string",
                                        "example": "собака"
                                    },
                                    "name_en": {
                                        "description": "Name of the updated Pet Type in English",
                                        "type": "string",
                                        "example": "dog"
                                    },
                                    "name_ru": {
                                        "description": "Name of the updated Pet Type in Russian",
                                        "type": "string",
                                        "example": "собака"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the updated Pet Type",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name_uk": {
                                            "description": "Name of the updated Pet Type in Ukrainian",
                                            "type": "string",
                                            "example": "собака"
                                        },
                                        "name_en": {
                                            "description": "Name of the updated Pet Type in English",
                                            "type": "string",
                                            "example": "dog"
                                        },
                                        "name_ru": {
                                            "description": "Name of the updated Pet Type in Russian",
                                            "type": "string",
                                            "example": "собака"
                                        },
                                        "updated_at": {
                                            "description": "Date and time of the last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        },
                                        "created_at": {
                                            "description": "Date and time of the creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-03-12T20:08:04.566Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "PetTypes"
                ],
                "summary": "Delete a Pet Type",
                "description": "Deletes a PetType by its ID",
                "operationId": "destroyPetType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Pet Type to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet Type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pet Type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/verify-email": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email address",
                "description": "Verifies the user's email address using a signed URL with email, expiration timestamp, user ID, and signature.",
                "operationId": "759799dc939fffb7ac180d6cb48e3c9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email address (URL-encoded)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "alex@4n.com.ua"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "Expiration timestamp of the signed URL",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1743993783
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "Signature for verifying the URL",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "464922ad1874fe858f0de7bc906f992fb6c19465b740dbf240b76a99c1d43072"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "Optional language code (e.g., 'en', 'uk')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully"
                    },
                    "400": {
                        "description": "Invalid or expired verification link"
                    },
                    "422": {
                        "description": "Email already verified or user not found"
                    }
                }
            }
        },
        "/api/{any}": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Set the current language by header",
                "operationId": "0e9c2e8fc2455638a0e9d9391b47ce59",
                "parameters": [
                    {
                        "name": "any",
                        "in": "path",
                        "description": "Dynamic API path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/AcceptLanguage"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language set successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Languages"
                ],
                "summary": "Set the current language by header",
                "operationId": "e3148d2a7ac6cc809490d4a417f8e836",
                "parameters": [
                    {
                        "name": "any",
                        "in": "path",
                        "description": "Dynamic API path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/AcceptLanguage"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language set successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Languages"
                ],
                "summary": "Set the current language by header",
                "operationId": "80df2f7efeb567a4fcd2695b1a04e0cc",
                "parameters": [
                    {
                        "name": "any",
                        "in": "path",
                        "description": "Dynamic API path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/AcceptLanguage"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language set successfully"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Auth": {
                "title": "Authentication",
                "description": "Аутентификация",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "PetBreed": {
                "title": "PetBreeds",
                "description": "Породы животных"
            },
            "PetOwner": {
                "title": "PetOwners",
                "description": "Владельцы животных"
            },
            "PetType": {
                "title": "PetTypes",
                "description": "Типы животных"
            },
            "User": {
                "title": "User",
                "description": "Схема пользователя",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Петро Харківський"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@example.com"
                    },
                    "language_code": {
                        "type": "string",
                        "example": "uk"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "AcceptLanguage": {
                "name": "Accept-Language",
                "in": "header",
                "description": "The language that will be set for any request",
                "required": false,
                "schema": {
                    "type": "string",
                    "example": "en"
                }
            }
        }
    },
    "tags": [
        {
            "name": "PetOwner",
            "description": "API for working with Pet Owners"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Languages",
            "description": "Languages"
        },
        {
            "name": "PetBreeds",
            "description": "PetBreeds"
        },
        {
            "name": "PetTypes",
            "description": "PetTypes"
        }
    ]
}